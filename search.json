[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Emil Thranholm",
    "section": "",
    "text": "This website containing different hobby project regarding data. I have a background in political science and love sports. So all topics on this page will revolve around data in combination with either politics or sports (and if really crazy, both)."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Emil Thranholm",
    "section": "",
    "text": "This website containing different hobby project regarding data. I have a background in political science and love sports. So all topics on this page will revolve around data in combination with either politics or sports (and if really crazy, both)."
  },
  {
    "objectID": "fodbold_kalender/00_danner_fodbolddata.html",
    "href": "fodbold_kalender/00_danner_fodbolddata.html",
    "title": "00_danner_fodbolddata",
    "section": "",
    "text": "## Danner fodbold data\n\n## Indlæsning af pakker og sætter parametre for api\n\nrm(list = ls())\n\nlibrary(pacman)\np_load(tidyverse, lubridate, httr, jsonlite, \n       devtools, janitor, stringr, httr2, here)\n\n# key &lt;- secret_make_key()\n\nbase_url &lt;- \"https://api-football-v1.p.rapidapi.com/v3\"\n\nheader &lt;- c(\"X-RapidAPI-Host\" = \"api-football-v1.p.rapidapi.com\",\n            \"X-RapidAPI-Key\" = secret_decrypt(Sys.getenv(\"PASS\"), \"FODBOLD_KEY\"))\n\nny_geo_url &lt;- \"https://geography2.p.rapidapi.com\"\n\nny_geo_headers &lt;- c(\"X-RapidAPI-Host\" = \"world-geography2.p.rapidapi.com\",\n                    \"X-RapidAPI-Key\" = secret_decrypt(Sys.getenv(\"PASS\"), \"FODBOLD_KEY\"))\n\n## Finder Tyskland \n## League info: 78, 79 og 80\n\n## Finder Danmark\n# league: 119\n\n## Finder Belgien\n# league: 144\n\nliga_get &lt;- tibble(liga_id = c(78, 79, 80, 119, 144),\n                   get = list(NULL),\n                   response = list(NULL))\n\n\nfor (i in 1:nrow(liga_get)) {\n  \n  liga_get$get[[i]] &lt;- request(paste(base_url,\n                                     paste0(\"fixtures\",\n                                            \"?league=\",\n                                            liga_get$liga_id[i],\n                                            \"&season=2024\"),\n                                     sep = \"/\")) %&gt;% \n    req_headers(!!!header) %&gt;% \n    req_perform()\n  \n  liga_get$response[[i]] &lt;- liga_get$get[[i]] %&gt;% \n    resp_body_string() %&gt;% \n    fromJSON() %&gt;% \n    pluck(\"response\") %&gt;% \n    as_tibble()\n  \n}\n\nkampprogram_fulddata &lt;- bind_rows(liga_get$response)\n\n## Sætter danske lokale\nSys.setlocale(\"LC_TIME\", \"da_DK\")\n\nWarning in Sys.setlocale(\"LC_TIME\", \"da_DK\"): OS reports request to set locale\nto \"da_DK\" cannot be honored\n\n\n[1] \"\"\n\nkampprogram &lt;- kampprogram_fulddata %&gt;% \n  rowwise() %&gt;% \n  mutate(runde = str_extract(league$round, \n                             \"(?&lt;=- ).+\"), \n         stadie = str_extract(league$round,\n                              \".+(?= -)\"),\n         aar = paste(league$season, league$season+1, sep = \"/\"),\n         liga_id = league$id,\n         liga = league$name,\n         land = league$country,\n         kampdato = date(fixture$date),\n         kamptidspunkt = if_else(fixture$status$short == \"TBD\", \n                                 \"TBA\",\n                                 format(\n                                   with_tz(\n                                     as_datetime(fixture$date, tz = fixture$timezone),\n                                     tzone = \"Europe/Berlin\"), \n                                   \"%H:%M\")),\n         ugedag = wday(kampdato, label = TRUE, abbr = FALSE, locale = \"da_DK.UTF-8\", week_start = 1),\n         ugedag_nr = wday(kampdato, week_start = 1),\n         kampuge = if_else(ugedag_nr == 1, isoweek(kampdato)-1, isoweek(kampdato)),\n         weekend = if_else(ugedag_nr %in% c(1, 5, 6, 7), TRUE, FALSE),\n         kamp = paste(teams$home$name, teams$away$name, sep = \" - \"),\n         hjemmehold = teams$home$name,\n         udehold = teams$away$name,\n         spilleby = fixture$venue$city,\n         stadion = fixture$venue$name,\n         kampstatus = fixture$status$long,\n         kamp_id = fixture$id,\n         stadion_id = fixture$venue$id,\n         timestamp = fixture$date,\n         .keep = \"none\") %&gt;% \n  distinct() %&gt;% \n  ungroup() %&gt;% \n  mutate(fiktiv_kamprunde = dense_rank(pick(kampuge, weekend)), .after = \"weekend\") %&gt;% \n  ## Specifikt for tysk liga\n  mutate(kamptidspunkt = if_else(liga == \"3. Liga\" & runde != \"38\" & min(timestamp) == max(timestamp), \n                                 \"TBA\", \n                                 kamptidspunkt),\n         .by = c(\"runde\", \"liga_id\")) %&gt;% \n  mutate(min_ugedag = if_else(kampdato == min(kampdato), kampdato, NA), .by = fiktiv_kamprunde) %&gt;% \n  group_by(fiktiv_kamprunde) %&gt;%\n  fill(min_ugedag, .direction = \"downup\") %&gt;% \n  ungroup() %&gt;% \n  arrange(runde, match(liga, \"Bundesliga\")) %&gt;% \n  nest(.by = land) %&gt;% \n  mutate(timestamp_selv = Sys.time())\n\n\nwrite_rds(kampprogram, here(\"fodbold_kalender\", \"data\", \"kampprogram.rds\"))"
  },
  {
    "objectID": "fodbold_kalender/Tysk fodboldkort.html",
    "href": "fodbold_kalender/Tysk fodboldkort.html",
    "title": "Tysk fodboldkalender",
    "section": "",
    "text": "OBS! Kamptidspunkter bør tjekkes efter. For 3. Liga især er de ikke altid retvisende.\nSeneste opdatering: 26/03/2025 13:39:46\n\n28. mar 202504. apr 202508. apr 202511. apr 202519. apr 202525. apr 202502. maj 202509. maj 202517. maj 202502. aug 202409. aug 202423. aug 202430. aug 202413. sep 202420. sep 202424. sep 202427. sep 202404. okt 202418. okt 202422. okt 202425. okt 202401. nov 202408. nov 202422. nov 202429. nov 202406. dec 202413. dec 202420. dec 202410. jan 202514. jan 202517. jan 202524. jan 202531. jan 202507. feb 202514. feb 202521. feb 202528. feb 202507. mar 202511. mar 202514. mar 2025"
  },
  {
    "objectID": "fodbold_kalender/Dansk fodboldkort.html",
    "href": "fodbold_kalender/Dansk fodboldkort.html",
    "title": "Dansk fodboldkalender",
    "section": "",
    "text": "Tjekker tidstempel fra data: 2025-03-26 12:39:33.263044\n\n\nWarning in left_join(., danske_stadion_geo, by = join_by(stadion == stadion_navn)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 19 of `x` matches multiple rows in `y`.\nℹ Row 97 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nDer er spillebyer, hvor der ikke er geo-data. Det drejer sig om: Risskov\n\n\nWarning: There were 4 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `plot = map(plot, ~.x %&gt;% girafe(ggobj = .x))`.\nCaused by warning:\n! Removed 1 row containing missing values or values outside the scale range\n(`geom_interactive_point()`).\nℹ Run `dplyr::last_dplyr_warnings()` to see the 3 remaining warnings.\n\n\n\n28. mar 202504. apr 202511. apr 202516. apr 202518. apr 202522. apr 202525. apr 202502. maj 202511. maj 202516. maj 202524. maj 202519. jul 202426. jul 202402. aug 202409. aug 202416. aug 202423. aug 202430. aug 202413. sep 202420. sep 202428. sep 202404. okt 202418. okt 202425. okt 202402. nov 202408. nov 202422. nov 202429. nov 202414. feb 202521. feb 202526. feb 202528. feb 202507. mar 202516. mar 2025"
  },
  {
    "objectID": "fodbold_kalender/Belgisk fodboldkort.html",
    "href": "fodbold_kalender/Belgisk fodboldkort.html",
    "title": "Belgisk fodboldkort",
    "section": "",
    "text": "Tjekker tidstempel fra data: 2025-03-26 12:39:33.263044\n\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/tmp/Rtmp6vTWCY/remotes20a67d2f67b6/ropensci-rnaturalearthhires-153b0ea/DESCRIPTION’ ... OK\n* preparing ‘rnaturalearthhires’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘rnaturalearthhires_1.0.0.9000.tar.gz’\n\n\n\n28. mar 202504. apr 202511. apr 202519. apr 202522. apr 202525. apr 202501. maj 202502. maj 202509. maj 202516. maj 202524. maj 202526. jul 202402. aug 202409. aug 202416. aug 202424. aug 202430. aug 202413. sep 202417. sep 202420. sep 202426. sep 202427. sep 202404. okt 202418. okt 202425. okt 202401. nov 202408. nov 202422. nov 202429. nov 202407. dec 202413. dec 202420. dec 202426. dec 202427. dec 202410. jan 202517. jan 202524. jan 202531. jan 202507. feb 202514. feb 202521. feb 202528. feb 202507. mar 202515. mar 2025"
  }
]